<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.house.Dao.FinanceMapper">
  <resultMap id="BaseResultMap" type="com.house.Bean.Finance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="Listing_id" jdbcType="INTEGER" property="listingId" />
    <result column="finance_type" jdbcType="VARCHAR" property="financeType" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="thing" jdbcType="VARCHAR" property="thing" />
    <result column="person" jdbcType="VARCHAR" property="person" />
    <result column="branch" jdbcType="VARCHAR" property="branch" />
    <result column="area" jdbcType="VARCHAR" property="area" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, Listing_id, finance_type, insert_time, price, thing, person, branch, area
  </sql>
  <select id="selectByExample" parameterType="com.house.Bean.FinanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from finance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from finance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.house.Bean.FinanceExample">
    delete from finance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.house.Bean.Finance">
    insert into finance (id, Listing_id, finance_type, 
      insert_time, price, thing, 
      person, branch, area
      )
    values (#{id,jdbcType=INTEGER}, #{listingId,jdbcType=INTEGER}, #{financeType,jdbcType=VARCHAR}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, #{thing,jdbcType=VARCHAR}, 
      #{person,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.house.Bean.Finance">
    insert into finance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="listingId != null">
        Listing_id,
      </if>
      <if test="financeType != null">
        finance_type,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="thing != null">
        thing,
      </if>
      <if test="person != null">
        person,
      </if>
      <if test="branch != null">
        branch,
      </if>
      <if test="area != null">
        area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="listingId != null">
        #{listingId,jdbcType=INTEGER},
      </if>
      <if test="financeType != null">
        #{financeType,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="thing != null">
        #{thing,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="branch != null">
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.house.Bean.FinanceExample" resultType="java.lang.Long">
    select count(*) from finance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update finance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.listingId != null">
        Listing_id = #{record.listingId,jdbcType=INTEGER},
      </if>
      <if test="record.financeType != null">
        finance_type = #{record.financeType,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.thing != null">
        thing = #{record.thing,jdbcType=VARCHAR},
      </if>
      <if test="record.person != null">
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.branch != null">
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update finance
    set id = #{record.id,jdbcType=INTEGER},
      Listing_id = #{record.listingId,jdbcType=INTEGER},
      finance_type = #{record.financeType,jdbcType=VARCHAR},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DECIMAL},
      thing = #{record.thing,jdbcType=VARCHAR},
      person = #{record.person,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.house.Bean.Finance">
    update finance
    <set>
      <if test="listingId != null">
        Listing_id = #{listingId,jdbcType=INTEGER},
      </if>
      <if test="financeType != null">
        finance_type = #{financeType,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="thing != null">
        thing = #{thing,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="branch != null">
        branch = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.house.Bean.Finance">
    update finance
    set Listing_id = #{listingId,jdbcType=INTEGER},
      finance_type = #{financeType,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      thing = #{thing,jdbcType=VARCHAR},
      person = #{person,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByTime" parameterType="map" resultMap="BaseResultMap">
    select * from Finance where area = #{area,jdbcType=VARCHAR} and branch=#{branch,jdbcType=VARCHAR}
    <if test="starttime!=null and starttime!=''">
      <![CDATA[   and DATE_FORMAT(insert_time, '%Y-%m-%d')>=  DATE_FORMAT(#{starttime}, '%Y-%m-%d')   ]]>
    </if>
    <if test="endtime!=null and endtime!=''">
      <![CDATA[  and DATE_FORMAT(insert_time, '%Y-%m-%d') <= DATE_FORMAT(#{endtime}, '%Y-%m-%d')    ]]>
    </if>
  </select>
  <select id="selectAllPn" resultType="java.lang.Integer">
    select count(*) from application
  </select>
  <select id="selectAllByStatus" parameterType="map" resultMap="BaseResultMap">
    select * from finance where finance_type = #{financeType,jdbcType=VARCHAR} and listing_id = #{listingId,jdbcType=VARCHAR}
    <if test="startTime != null and startTime != ''">AND insert_Time <![CDATA[>=]]> #{startTime}</if>
    <if test="endTime != null and endTime != ''">AND insert_Time  <![CDATA[<=]]>#{endTime}</if>
    order by id desc
  </select>
  <select id="selectInByListingId" parameterType="map" resultType="java.math.BigDecimal">
    select price from finance where listing_id=#{listingId,jdbcType=VARCHAR} and finance_type = #{status,jdbcType=VARCHAR}
    <if test="startTime != null and startTime != ''">AND insert_Time <![CDATA[>=]]> #{startTime}</if>
    <if test="endTime != null and endTime != ''">AND insert_Time  <![CDATA[<=]]>#{endTime}</if>
    order by id desc
  </select>
  <select id="selectInByOther" parameterType="map" resultType="java.math.BigDecimal">
    select price from finance where finance_type = #{financeType,jdbcType=VARCHAR}
    <if test="branch!=null and branch!=''">
      and branch = #{branch,jdbcType=VARCHAR}
    </if>
    <if test="area!=null and area!=''">
      and area = #{area,jdbcType=VARCHAR}
    </if>
    <if test="startTime != null and startTime != ''">AND insert_Time <![CDATA[>=]]> #{startTime}</if>
    <if test="endTime != null and endTime != ''">AND insert_Time  <![CDATA[<=]]>#{endTime}</if>
    order by id desc
  </select>
</mapper>