<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.house.Dao.RepairMapper">
  <resultMap id="BaseResultMap" type="com.house.Bean.Repair">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_name" jdbcType="VARCHAR" property="tenantName" />
    <result column="tenant_phone" jdbcType="VARCHAR" property="tenantPhone" />
    <result column="repair_time" jdbcType="TIMESTAMP" property="repairTime" />
    <result column="room_address" jdbcType="VARCHAR" property="roomAddress" />
    <result column="repair_thing" jdbcType="VARCHAR" property="repairThing" />
    <result column="repair_descr" jdbcType="VARCHAR" property="repairDescr" />
    <result column="repair_pic" jdbcType="VARCHAR" property="repairPic" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="person" jdbcType="VARCHAR" property="person" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_name, tenant_phone, repair_time, room_address, repair_thing, repair_descr, 
    repair_pic, status, person, note, time
  </sql>
  <select id="selectByExample" parameterType="com.house.Bean.RepairExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repair
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repair
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.house.Bean.RepairExample">
    delete from repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.house.Bean.Repair">
    insert into repair (id, tenant_name, tenant_phone, 
      repair_time, room_address, repair_thing, 
      repair_descr, repair_pic, status, 
      person, note, time
      )
    values (#{id,jdbcType=INTEGER}, #{tenantName,jdbcType=VARCHAR}, #{tenantPhone,jdbcType=VARCHAR}, 
      #{repairTime,jdbcType=TIMESTAMP}, #{roomAddress,jdbcType=VARCHAR}, #{repairThing,jdbcType=VARCHAR}, 
      #{repairDescr,jdbcType=VARCHAR}, #{repairPic,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{person,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.house.Bean.Repair">
    insert into repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantName != null">
        tenant_name,
      </if>
      <if test="tenantPhone != null">
        tenant_phone,
      </if>
      <if test="repairTime != null">
        repair_time,
      </if>
      <if test="roomAddress != null">
        room_address,
      </if>
      <if test="repairThing != null">
        repair_thing,
      </if>
      <if test="repairDescr != null">
        repair_descr,
      </if>
      <if test="repairPic != null">
        repair_pic,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="person != null">
        person,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tenantName != null">
        #{tenantName,jdbcType=VARCHAR},
      </if>
      <if test="tenantPhone != null">
        #{tenantPhone,jdbcType=VARCHAR},
      </if>
      <if test="repairTime != null">
        #{repairTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomAddress != null">
        #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="repairThing != null">
        #{repairThing,jdbcType=VARCHAR},
      </if>
      <if test="repairDescr != null">
        #{repairDescr,jdbcType=VARCHAR},
      </if>
      <if test="repairPic != null">
        #{repairPic,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.house.Bean.RepairExample" resultType="java.lang.Long">
    select count(*) from repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update repair
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tenantName != null">
        tenant_name = #{record.tenantName,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantPhone != null">
        tenant_phone = #{record.tenantPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.repairTime != null">
        repair_time = #{record.repairTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roomAddress != null">
        room_address = #{record.roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.repairThing != null">
        repair_thing = #{record.repairThing,jdbcType=VARCHAR},
      </if>
      <if test="record.repairDescr != null">
        repair_descr = #{record.repairDescr,jdbcType=VARCHAR},
      </if>
      <if test="record.repairPic != null">
        repair_pic = #{record.repairPic,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.person != null">
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update repair
    set id = #{record.id,jdbcType=INTEGER},
      tenant_name = #{record.tenantName,jdbcType=VARCHAR},
      tenant_phone = #{record.tenantPhone,jdbcType=VARCHAR},
      repair_time = #{record.repairTime,jdbcType=TIMESTAMP},
      room_address = #{record.roomAddress,jdbcType=VARCHAR},
      repair_thing = #{record.repairThing,jdbcType=VARCHAR},
      repair_descr = #{record.repairDescr,jdbcType=VARCHAR},
      repair_pic = #{record.repairPic,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      person = #{record.person,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.house.Bean.Repair">
    update repair
    <set>
      <if test="tenantName != null">
        tenant_name = #{tenantName,jdbcType=VARCHAR},
      </if>
      <if test="tenantPhone != null">
        tenant_phone = #{tenantPhone,jdbcType=VARCHAR},
      </if>
      <if test="repairTime != null">
        repair_time = #{repairTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomAddress != null">
        room_address = #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="repairThing != null">
        repair_thing = #{repairThing,jdbcType=VARCHAR},
      </if>
      <if test="repairDescr != null">
        repair_descr = #{repairDescr,jdbcType=VARCHAR},
      </if>
      <if test="repairPic != null">
        repair_pic = #{repairPic,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="person != null">
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.house.Bean.Repair">
    update repair
    set tenant_name = #{tenantName,jdbcType=VARCHAR},
      tenant_phone = #{tenantPhone,jdbcType=VARCHAR},
      repair_time = #{repairTime,jdbcType=TIMESTAMP},
      room_address = #{roomAddress,jdbcType=VARCHAR},
      repair_thing = #{repairThing,jdbcType=VARCHAR},
      repair_descr = #{repairDescr,jdbcType=VARCHAR},
      repair_pic = #{repairPic,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      person = #{person,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAllByStatus" parameterType="map" resultMap="BaseResultMap">
    select * from repair where status = #{status,jdbcType=VARCHAR}
    order by id desc
  </select>
  <select id="selectBlurry" parameterType="map" resultMap="BaseResultMap">
    select * from repair where tenant_name like concat('%',#{blurry},'%') or tenant_phone like concat('%',#{blurry},'%')
    or room_address like concat('%',#{blurry},'%') or person like concat('%',#{blurry},'%')
        order by id desc
  </select>
  <select id="selectAllPn" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from application where status = #{status,jdbcType=VARCHAR}
    order by id desc
  </select>
</mapper>